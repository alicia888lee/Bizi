type User @model @key(fields: ["userEmail"]) {
  userEmail: String!
  userType: String
  userPreferences: [String]
  bookmarks: [String]
  coupons: [Coupon]
}

type Coupon {
  businessID: String!
  discountIndex: Int!
  used: Boolean!
  timeUsed: Float
}

type Business @model {
  id: ID!
  businessName: String
  businessDescription: String
  initiatives: [String]
  policyList: [String]
  businessPhone: String
  businessURL: String
  deliveryURL: String
  reservationURL: String
  address: String
  userEmail: String
  lat: Float
  lng: Float
  priceRange: Int
  schedule: [[Float!]!]
  imgPath: String
  discounts: [[Int!]!]
  reviews: [Review!]
  approved: Boolean!
}

type Review {
  userEmail: String!
  userName: String!
  imgPath: String
  rating: Int!
  text: String
}

type Mutation {
  recommend(preferences: [String!], attributes: [String!]): [String] @function(name: "recommendFunction-${env}")
  sendEmail(recipientEmail: String, subject: String, body: String): String @function(name: "emailFunction-${env}")
}

type Credentials @model {
  geocodeAPIKey: String
  mapAPIKey: String
  accessKey: String
  secretKey: String
}